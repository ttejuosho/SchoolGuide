@model AddSchoolVM
@{
    ViewBag.Title = "New School";
}

<div class="jumbotron">
    @if (Model == null)
    {
        <h1 class="text-center display-4">Add School</h1>
    }
    else
    {
        <h1 class="text-center display-4">@Model.SchoolName</h1>
    }

</div>

<div class="row justify-content-center">
    <div class="col-6">
        @using (@Html.BeginForm("Add", "School", FormMethod.Post, new { enctype="multipart/form-data", @id = "addSchoolForm", @class = "addSchool"}))
        {
            @Html.AntiForgeryToken()
        <form>
            @if (Model != null)
            {@Html.HiddenFor(model => model.SchoolId, htmlAttributes: new { @class = "" })}
            <div class="form-group row mb-2">
                @Html.LabelFor(model => model.SchoolName, htmlAttributes: new { @class = "required" })
                @Html.TextBoxFor(model => model.SchoolName, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SchoolName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group row mb-2">
                @Html.LabelFor(model => model.SchoolAddress, htmlAttributes: new { @class = "required" })
                @Html.TextBoxFor(model => model.SchoolAddress, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SchoolAddress, "", new { @class = "text-danger" })
            </div>
            <div class="form-group row mb-2">
                <div class="col-6 pl-0">
                    @Html.LabelFor(model => model.SchoolCity, htmlAttributes: new { @class = "required" })
                    @Html.TextBoxFor(model => model.SchoolCity, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SchoolCity, "", new { @class = "text-danger" })
                </div>
                <div class="col-6 pr-0">
                    @Html.LabelFor(model => model.SchoolState, htmlAttributes: new { @class = "required" })
                    @Html.TextBoxFor(model => model.SchoolState, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SchoolState, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-2">
                @Html.LabelFor(model => model.SchoolEmail, htmlAttributes: new { @class = "required" })
                @Html.TextBoxFor(model => model.SchoolEmail, htmlAttributes: new { @class = "form-control", @type = "email" })
                @Html.ValidationMessageFor(model => model.SchoolEmail, "", new { @class = "text-danger" })
            </div>
            <div class="form-group row mb-2">
                @Html.LabelFor(model => model.PrincipalName, htmlAttributes: new { @class = "required" })
                @Html.TextBoxFor(model => model.PrincipalName, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PrincipalName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group row mb-2">
                <div class="col-6 pl-0">
                    @Html.LabelFor(model => model.SchoolPhone, htmlAttributes: new { @class = "required" })
                    @Html.TextBoxFor(model => model.SchoolPhone, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SchoolPhone, "", new { @class = "text-danger" })
                </div>
                <div class="col-6 pr-0">
                    @Html.LabelFor(model => model.SchoolPhone2, htmlAttributes: new { @class = "" })
                    @Html.TextBoxFor(model => model.SchoolPhone2, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SchoolPhone2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-2">
                @Html.LabelFor(model => model.SchoolWeb, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.SchoolWeb, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SchoolWeb, "", new { @class = "text-danger" })
            </div>
            <div class="form-group row mb-2">
                <div class="form-check">
                    @Html.CheckBoxFor(model => model.IsReligious, htmlAttributes: new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.IsReligious, htmlAttributes: new { @class = "form-check-label" })
                </div>
            </div>
            <div class="form-group row mb-2">
                <div class="form-check">
                    @Html.CheckBoxFor(model => model.IsBoarding, htmlAttributes: new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.IsBoarding, htmlAttributes: new { @class = "form-check-label" })
                </div>
            </div>
            <div class="form-group row mb-2">
                <label asp-for="ProfileImage" class="col-sm-4 col-form-label pl-0"></label>
                <div class="custom-file">
                    <input class="form-control custom-file-input" asp-for="ProfileImage">
                    <label class="custom-file-label" asp-for="ProfileImage">Choose file...</label>
                </div>
            </div>
            <div class="form-group row justify-content-end"><a href="/School/Schools" role="button" class="btn btn-sm btn-primary mr-2">Cancel</a><button class="btn btn-sm btn-danger" id="addSchool">Submit</button></div>
            @section Scripts{ 
            <script>
                $(document).ready(function () {
                    $('.custom-file-input').on('change', function () {
                        var fileName = $(this).val().split('\\').pop();
                        $(this).next('.custom-file-label').html(fileName);
                    });
                });
            </script>
            }
        </form>
        }
    </div>
</div>
